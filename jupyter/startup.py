#!/usr/bin/env python3
# This script runs on Jupyter Notebook startup and installs commonly needed packages

import subprocess
import sys
import os

# Define packages to install
packages = [
    "numpy",
    "pandas",
    "matplotlib",
    "seaborn",
    "scikit-learn",
    "torch",
    "transformers",
    "nltk",
    "spacy",
    "beautifulsoup4",
    "requests",
    "plotly",
    "pillow",
]

print("Installing common packages for data science and AI tasks...")

# Install packages
for package in packages:
    try:
        subprocess.check_call([sys.executable, "-m", "pip", "install", "--quiet", package])
        print(f"✅ {package} installed successfully")
    except Exception as e:
        print(f"❌ Failed to install {package}: {e}")

# Create welcome notebook
welcome_notebook = """
{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Welcome to Unified AI Platform - Jupyter Notebook\n",
    "\n",
    "This notebook environment is integrated with your AI platform and allows you to:\n",
    "\n",
    "1. Execute code generated by AI models\n",
    "2. Analyze data and create visualizations\n",
    "3. Develop and test algorithms\n",
    "4. Process and manipulate data\n",
    "\n",
    "## Pre-installed Packages\n",
    "\n",
    "The following packages are pre-installed for your convenience:\n",
    "\n",
    "- **Data Analysis**: numpy, pandas\n",
    "- **Visualization**: matplotlib, seaborn, plotly\n",
    "- **Machine Learning**: scikit-learn, torch, transformers\n",
    "- **NLP**: nltk, spacy\n",
    "- **Web & Data**: requests, beautifulsoup4\n",
    "- **Image Processing**: pillow\n",
    "\n",
    "## Quick Test\n",
    "\n",
    "Run the following cell to confirm that everything is working correctly:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "\n",
    "# Create a simple dataset\n",
    "data = np.random.normal(0, 1, 1000)\n",
    "df = pd.DataFrame({'values': data})\n",
    "\n",
    "# Create a visualization\n",
    "plt.figure(figsize=(10, 6))\n",
    "sns.histplot(df['values'], kde=True)\n",
    "plt.title('Normal Distribution')\n",
    "plt.show()\n",
    "\n",
    "print('All systems operational!')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Working with AI-Generated Code\n",
    "\n",
    "When you receive code from the AI, you can copy it directly into a notebook cell and execute it. \n",
    "This environment is particularly useful for iterative development and testing."
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.10"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
"""

# Create a welcome notebook if it doesn't exist
welcome_path = '/home/jovyan/work/welcome.ipynb'
if not os.path.exists(welcome_path):
    with open(welcome_path, 'w') as f:
        f.write(welcome_notebook)
    print("✅ Created welcome notebook")

print("\n✅ Jupyter environment setup complete!") 